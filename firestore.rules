rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function rolePriority(role) {
      return role == 'owner' ? 4 : role == 'admin' ? 3 : role == 'editor' ? 2 : 1;
    }

    function isOrgMember(orgId) {
      return exists(/databases/$(database)/documents/organizations/$(orgId)) &&
        request.auth.uid in get(/databases/$(database)/documents/organizations/$(orgId)).data.members;
    }

    function orgRole(orgId) {
      return get(/databases/$(database)/documents/organizations/$(orgId)).data.members[request.auth.uid].role;
    }

    // Organization rules
    match /organizations/{orgId} {
      allow read: if isOrgMember(orgId);
      allow update: if isOrgMember(orgId) && orgRole(orgId) == 'owner';
      allow delete: if isOrgMember(orgId) && orgRole(orgId) == 'owner';
      allow create: if request.auth != null;

      // Boards under organization
      match /boards/{boardId} {
        allow read: if isOrgMember(orgId);
  allow write: if isOrgMember(orgId) && rolePriority(orgRole(orgId)) >= rolePriority(resource.data.creatorRole) && orgRole(orgId) != 'viewer';
  allow delete: if isOrgMember(orgId) && rolePriority(orgRole(orgId)) >= 2; // editor or higher

        // Lists under board
        match /lists/{listId} {
          allow read: if isOrgMember(orgId);
          allow write: if isOrgMember(orgId) && rolePriority(orgRole(orgId)) >= rolePriority(resource.data.creatorRole) && orgRole(orgId) != 'viewer';
          allow delete: if isOrgMember(orgId) && rolePriority(orgRole(orgId)) >= 2;
        }

        // Cards under board
        match /cards/{cardId} {
          allow read: if isOrgMember(orgId);
          allow write: if isOrgMember(orgId) && rolePriority(orgRole(orgId)) >= rolePriority(resource.data.creatorRole) && orgRole(orgId) != 'viewer';
          allow delete: if isOrgMember(orgId) && rolePriority(orgRole(orgId)) >= 2;
        }
      }
    }
  }
}