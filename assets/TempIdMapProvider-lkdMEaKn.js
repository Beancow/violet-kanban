import{r as d,R as c}from"./index-0yr9KlQE.js";import{p as n,c as i,r as l,a as u,b as p}from"./OrganizationProvider-CV2sulVi.js";function R(s,t){return n(s,r=>{switch(t.type){case"ADD_BOARD":r.boards.push(t.board);return;case"UPDATE_BOARD":{const a=r.boards.findIndex(o=>o.id===t.board.id);a>=0&&(r.boards[a]={...r.boards[a],...t.board});return}case"REMOVE_BOARD":r.boards=r.boards.filter(a=>a.id!==t.boardId);return;case"SET_BOARDS":r.boards=t.boards;return}})}const m="violet-kanban-board-storage",h=d.createContext(null);function S({children:s}){let t={boards:[]};try{if(typeof window<"u"){const e=window.localStorage.getItem(m);e&&(t=JSON.parse(e))}}catch(e){console.error("[board] failed to read from localStorage",e);try{i(e)}catch{}t={boards:[]}}const[r,a]=d.useReducer(R,t);d.useEffect(()=>{try{window.localStorage.setItem(m,JSON.stringify(r))}catch(e){console.error("[board] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const o={state:r,addBoard:e=>a({type:"ADD_BOARD",board:e}),updateBoard:e=>a({type:"UPDATE_BOARD",board:e}),removeBoard:e=>a({type:"REMOVE_BOARD",boardId:e})};return d.useEffect(()=>(l({addBoard:o.addBoard,updateBoard:o.updateBoard,removeBoard:o.removeBoard}),()=>l()),[r]),c.createElement(h.Provider,{value:o},s)}function b(){const s=d.useContext(h);if(!s)throw new Error("useBoards must be used within BoardProvider");return s}S.__docgenInfo={description:"",methods:[],displayName:"BoardProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};function _(s,t){return n(s,r=>{switch(t.type){case"ADD_LIST":r.lists.push(t.list);return;case"UPDATE_LIST":{const a=r.lists.findIndex(o=>o.id===t.list.id);a>=0&&(r.lists[a]={...r.lists[a],...t.list});return}case"REMOVE_LIST":r.lists=r.lists.filter(a=>a.id!==t.listId);return;case"SET_LISTS":r.lists=t.lists;return}})}const f="violet-kanban-list-storage",A=d.createContext(null);function I({children:s}){let t={lists:[]};try{if(typeof window<"u"){const e=window.localStorage.getItem(f);e&&(t=JSON.parse(e))}}catch(e){console.error("[list] failed to read from localStorage",e);try{i(e)}catch{}t={lists:[]}}const[r,a]=d.useReducer(_,t);d.useEffect(()=>{try{window.localStorage.setItem(f,JSON.stringify(r))}catch(e){console.error("[list] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const o={state:r,addList:e=>a({type:"ADD_LIST",list:e}),updateList:e=>a({type:"UPDATE_LIST",list:e}),removeList:e=>a({type:"REMOVE_LIST",listId:e})};return d.useEffect(()=>(u({addList:o.addList,updateList:o.updateList,removeList:o.removeList}),()=>u()),[r]),c.createElement(A.Provider,{value:o},s)}function B(){const s=d.useContext(A);if(!s)throw new Error("useLists must be used within ListProvider");return s}I.__docgenInfo={description:"",methods:[],displayName:"ListProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};function g(s,t){return n(s,r=>{switch(t.type){case"ADD_CARD":r.cards.push(t.card);return;case"UPDATE_CARD":{const a=r.cards.findIndex(o=>o.id===t.card.id);a>=0&&(r.cards[a]={...r.cards[a],...t.card});return}case"REMOVE_CARD":r.cards=r.cards.filter(a=>a.id!==t.cardId);return;case"MARK_ORPHANED":{const a=r.cards.find(o=>o.id===t.cardId);a&&(r.orphanedCards=[...r.orphanedCards??[],a]);return}case"SET_CARDS":r.cards=t.cards;return}})}const E="violet-kanban-card-storage",C=d.createContext(null);function D({children:s}){let t={cards:[],orphanedCards:[]};try{if(typeof window<"u"){const e=window.localStorage.getItem(E);e&&(t=JSON.parse(e))}}catch(e){console.error("[card] failed to read from localStorage",e);try{i(e)}catch{}t={cards:[],orphanedCards:[]}}const[r,a]=d.useReducer(g,t);d.useEffect(()=>{try{window.localStorage.setItem(E,JSON.stringify(r))}catch(e){console.error("[card] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const o={state:r,addCard:e=>a({type:"ADD_CARD",card:e}),updateCard:e=>a({type:"UPDATE_CARD",card:e}),removeCard:e=>a({type:"REMOVE_CARD",cardId:e}),markCardOrphaned:e=>a({type:"MARK_ORPHANED",cardId:e})};return d.useEffect(()=>(p({addCard:o.addCard,updateCard:o.updateCard,removeCard:o.removeCard,markCardOrphaned:o.markCardOrphaned}),()=>p()),[r]),c.createElement(C.Provider,{value:o},s)}function x(){const s=d.useContext(C);if(!s)throw new Error("useCards must be used within CardProvider");return s}D.__docgenInfo={description:"",methods:[],displayName:"CardProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};function v(s,t){return n(s,r=>{switch(t.type){case"SET_MAPPING":r[t.tempId]=t.realId;return;case"CLEAR_MAPPING":delete r[t.tempId];return;case"CLEAR_ALL":Object.keys(r).forEach(a=>delete r[a]);return}})}const y="violet-kanban-tempidmap-storage",L=d.createContext(null);function O({children:s}){let t={};try{if(typeof window<"u"){const e=window.localStorage.getItem(y);e&&(t=JSON.parse(e))}}catch(e){console.error("[tempIdMap] failed to read from localStorage",e);try{i(e)}catch{}t={}}const[r,a]=d.useReducer(v,t);d.useEffect(()=>{try{window.localStorage.setItem(y,JSON.stringify(r))}catch(e){console.error("[tempIdMap] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const o={state:r,setMapping:(e,w)=>a({type:"SET_MAPPING",tempId:e,realId:w}),getRealId:e=>r[e],clearMapping:e=>a({type:"CLEAR_MAPPING",tempId:e}),clearAll:()=>a({type:"CLEAR_ALL"})};return c.createElement(L.Provider,{value:o},s)}O.__docgenInfo={description:"",methods:[],displayName:"TempIdMapProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};export{S as B,D as C,I as L,O as T,B as a,x as b,b as u};
