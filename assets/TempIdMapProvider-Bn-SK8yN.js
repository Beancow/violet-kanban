import{j as c}from"./jsx-runtime-D_zvdyIk.js";import{r as d}from"./index-0yr9KlQE.js";import{p as n,c as i,r as u,b as l,d as p}from"./QueueProvider-khQ-P9eI.js";function S(a,t){return n(a,r=>{switch(t.type){case"ADD_BOARD":r.boards.push(t.board);return;case"UPDATE_BOARD":{const o=r.boards.findIndex(s=>s.id===t.board.id);o>=0&&(r.boards[o]={...r.boards[o],...t.board});return}case"REMOVE_BOARD":r.boards=r.boards.filter(o=>o.id!==t.boardId);return;case"SET_BOARDS":r.boards=t.boards;return}})}const f="violet-kanban-board-storage",h=d.createContext(null);function R({children:a}){let t={boards:[]};try{if(typeof window<"u"){const e=window.localStorage.getItem(f);e&&(t=JSON.parse(e))}}catch(e){console.error("[board] failed to read from localStorage",e);try{i(e)}catch{}t={boards:[]}}const[r,o]=d.useReducer(S,t);d.useEffect(()=>{try{window.localStorage.setItem(f,JSON.stringify(r))}catch(e){console.error("[board] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const s={state:r,addBoard:e=>o({type:"ADD_BOARD",board:e}),updateBoard:e=>o({type:"UPDATE_BOARD",board:e}),removeBoard:e=>o({type:"REMOVE_BOARD",boardId:e})};return d.useEffect(()=>(u({addBoard:s.addBoard,updateBoard:s.updateBoard,removeBoard:s.removeBoard}),()=>u()),[r]),c.jsx(h.Provider,{value:s,children:a})}function b(){const a=d.useContext(h);if(!a)throw new Error("useBoards must be used within BoardProvider");return a}R.__docgenInfo={description:"",methods:[],displayName:"BoardProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};function _(a,t){return n(a,r=>{switch(t.type){case"ADD_LIST":r.lists.push(t.list);return;case"UPDATE_LIST":{const o=r.lists.findIndex(s=>s.id===t.list.id);o>=0&&(r.lists[o]={...r.lists[o],...t.list});return}case"REMOVE_LIST":r.lists=r.lists.filter(o=>o.id!==t.listId);return;case"SET_LISTS":r.lists=t.lists;return}})}const m="violet-kanban-list-storage",A=d.createContext(null);function I({children:a}){let t={lists:[]};try{if(typeof window<"u"){const e=window.localStorage.getItem(m);e&&(t=JSON.parse(e))}}catch(e){console.error("[list] failed to read from localStorage",e);try{i(e)}catch{}t={lists:[]}}const[r,o]=d.useReducer(_,t);d.useEffect(()=>{try{window.localStorage.setItem(m,JSON.stringify(r))}catch(e){console.error("[list] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const s={state:r,addList:e=>o({type:"ADD_LIST",list:e}),updateList:e=>o({type:"UPDATE_LIST",list:e}),removeList:e=>o({type:"REMOVE_LIST",listId:e})};return d.useEffect(()=>(l({addList:s.addList,updateList:s.updateList,removeList:s.removeList}),()=>l()),[r]),c.jsx(A.Provider,{value:s,children:a})}function B(){const a=d.useContext(A);if(!a)throw new Error("useLists must be used within ListProvider");return a}I.__docgenInfo={description:"",methods:[],displayName:"ListProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};function g(a,t){return n(a,r=>{switch(t.type){case"ADD_CARD":r.cards.push(t.card);return;case"UPDATE_CARD":{const o=r.cards.findIndex(s=>s.id===t.card.id);o>=0&&(r.cards[o]={...r.cards[o],...t.card});return}case"REMOVE_CARD":r.cards=r.cards.filter(o=>o.id!==t.cardId);return;case"MARK_ORPHANED":{const o=r.cards.find(s=>s.id===t.cardId);o&&(r.orphanedCards=[...r.orphanedCards??[],o]);return}case"SET_CARDS":r.cards=t.cards;return}})}const E="violet-kanban-card-storage",C=d.createContext(null);function D({children:a}){let t={cards:[],orphanedCards:[]};try{if(typeof window<"u"){const e=window.localStorage.getItem(E);e&&(t=JSON.parse(e))}}catch(e){console.error("[card] failed to read from localStorage",e);try{i(e)}catch{}t={cards:[],orphanedCards:[]}}const[r,o]=d.useReducer(g,t);d.useEffect(()=>{try{window.localStorage.setItem(E,JSON.stringify(r))}catch(e){console.error("[card] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const s={state:r,addCard:e=>o({type:"ADD_CARD",card:e}),updateCard:e=>o({type:"UPDATE_CARD",card:e}),removeCard:e=>o({type:"REMOVE_CARD",cardId:e}),markCardOrphaned:e=>o({type:"MARK_ORPHANED",cardId:e})};return d.useEffect(()=>(p({addCard:s.addCard,updateCard:s.updateCard,removeCard:s.removeCard,markCardOrphaned:s.markCardOrphaned}),()=>p()),[r]),c.jsx(C.Provider,{value:s,children:a})}function N(){const a=d.useContext(C);if(!a)throw new Error("useCards must be used within CardProvider");return a}D.__docgenInfo={description:"",methods:[],displayName:"CardProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};function v(a,t){return n(a,r=>{switch(t.type){case"SET_MAPPING":r[t.tempId]=t.realId;return;case"CLEAR_MAPPING":delete r[t.tempId];return;case"CLEAR_ALL":Object.keys(r).forEach(o=>delete r[o]);return}})}const y="violet-kanban-tempidmap-storage",L=d.createContext(null);function O({children:a}){let t={};try{if(typeof window<"u"){const e=window.localStorage.getItem(y);e&&(t=JSON.parse(e))}}catch(e){console.error("[tempIdMap] failed to read from localStorage",e);try{i(e)}catch{}t={}}const[r,o]=d.useReducer(v,t);d.useEffect(()=>{try{window.localStorage.setItem(y,JSON.stringify(r))}catch(e){console.error("[tempIdMap] failed to write to localStorage",e);try{i(e)}catch{}}},[r]);const s={state:r,setMapping:(e,w)=>o({type:"SET_MAPPING",tempId:e,realId:w}),getRealId:e=>r[e],clearMapping:e=>o({type:"CLEAR_MAPPING",tempId:e}),clearAll:()=>o({type:"CLEAR_ALL"})};return c.jsx(L.Provider,{value:s,children:a})}O.__docgenInfo={description:"",methods:[],displayName:"TempIdMapProvider",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}};export{R as B,D as C,I as L,O as T,B as a,N as b,b as u};
